## === services configuration ===

IOHUBOS_TIMEZONE='America/Los_Angeles'
IOHUBOS_OPENSSH_ENABLED='true'
IOHUBOS_SSH_PUBLIC_KEY=''
IOHUBOS_UPGRADER_ENABLED='true'
IOHUBOS_DEPLOYER_ENABLED='true'
IOHUBOS_DOCKER_ENABLED='true'

## === network configuration ===

IOHUBOS_NETWORK_CONFIG='true'               # let IOhubOS manage the network configuration
IOHUBOS_NETWORK_MODE='standalone'           # standalone or router

## === first interface configuration ===

IOHUBOS_ETH0_MODE='dhcp'                    # dhcp/static
IOHUBOS_ETH0_IP=''                          # e.g. 192.168.190.254
IOHUBOS_ETH0_NETMASK=''                     # e.g. 255.255.255.0
IOHUBOS_ETH0_GATEWAY=''                     # e.g. 192.168.190.1
IOHUBOS_ETH0_DNS=''                         # space separated list, e.g. 192.168.190.1 8.8.8.8

## === second interface configuration ===
# Only for router mode.
# Only static mode is supported.

IOHUBOS_ETH1_DEVICE=''                      # e.g. enp1s0
IOHUBOS_ETH1_IP=''                          # e.g. 10.11.12.13
IOHUBOS_ETH1_NETMASK=''                     # e.g. 255.255.255.0

## === WiFi general configuration ===

IOHUBOS_WIFI_MODE=''                        # empty, 'client' or 'ap'. If set, the first interface is not used
IOHUBOS_WIFI_DEVICE=''                      # wifi interface. 'auto' for autodiscovery

## === WiFi client configuration ===
# Only client mode is supported.

IOHUBOS_WIFI_CLIENT_SSID=''                 # wifi client ssid
IOHUBOS_WIFI_CLIENT_PASS=''                 # wifi client password

## === WiFi AP configuration, only for router mode ===
# If WiFi AP is set, IOHUBOS_NETWORK_MODE must be set to 'router'
# and you probably want IOHUBOS_DHCP_SERVER_ENABLED enabled

IOHUBOS_WIFI_AP_SSID=''                     # wifi ap ssid
IOHUBOS_WIFI_AP_PASS=''                     # wifi ap password

## === dhcp server configuration ===

IOHUBOS_DHCP_SERVER_ENABLED='false'         # dhcp server on eth1
IOHUBOS_DHCP_SERVER_FROM=''                 # e.g. 10.11.12.100
IOHUBOS_DHCP_SERVER_TO=''                   # e.g. 10.11.12.199
IOHUBOS_DHCP_SERVER_DNS=''                  # comma separated list, e.g. 192.168.190.1, 8.8.8.8

## === firewall configuration ===

IOHUBOS_FIREWALL_CONFIG='true'              # let IOhubOS manage the firewall configuration
IOHUBOS_FIREWALL_ROUTER_TO_INTERNET='false' # grant devices on router side access to internet

## === docker registry configuration ===

IOHUBOS_DOCKER_REGISTRY_ENABLED='true'          # enable engine registry
IOHUBOS_DOCKER_REGISTRY_EXPOSE_ETH0='false'     # registry accessible on eth0 side
IOHUBOS_DOCKER_REGISTRY_EXPOSE_ETH1='false'     # registry accessible on eth1 side
IOHUBOS_DOCKER_REGISTRY_RESCAN='true'           # force reload images from /var/lib/images at every restart
IOHUBOS_DOCKER_REGISTRY_RESCAN_DELETE='true'    # delete the image after the import in the registry

## === admin api ===

IOHUBOS_ADMIN_API_ENABLED='false'           # enable admin api
IOHUBOS_ADMIN_API_SERVER_PORT='9999'        # http port
IOHUBOS_ADMIN_API_AUTH_TOKEN=''             # header auth token - must be at least 32 characters - X-API-TOKEN

## === IOhub compatibility layer ===

IOHUBOS_GLOBAL_MQTT='true'
IOHUBOS_GLOBAL_MQTT_IMG="${IOHUBOS_HOSTNAME}:5000/iohubos/iohubos-mqtt"
IOHUBOS_GLOBAL_MQTT_NAME="ezvpn-global-mqtt"    # keep ezvpn-global-mqtt to keep backword compatibility with IOhub global broker definiton
IOHUBOS_GLOBAL_MQTT_NET="ezvpn-global-mqtt-net" # keep ezvpn-global-mqtt-net to keep backword compatibility with IOhub global broker definiton

## === vpn ===

IOHUBOS_VPN_ENABLED='false'                 # enable wireguard vpn
IOHUBOS_VPN_SERVER_PUBLIC_KEY=''            # wireguard server public key
IOHUBOS_VPN_BOX_NUMBER=''                   # a number > 1; box progressive number, must be unique for each box and > 1 (1 is the server)
IOHUBOS_VPN_NETWORK=''                      # internal wireguard vpn network, e.g. 100.90.56.0/24
IOHUBOS_VPN_SERVER_IP_ADDRESS=''            # public server ip address
IOHUBOS_VPN_SERVER_IP_PORT=''               # public server port, e.g. 51820
IOHUBOS_VPN_EXPOSE='auto'                   # 'auto' to expose
                                            #     eth0 ip address when in standalone mode
                                            #     eth1 network when in router mode
                                            # otherwise set manually to set the AllowedIPs
